++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile bundle install
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ bundle =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args bundle install
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 2 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options bundle install
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS bundle install
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option bundle install
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// bundle install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= bundle install
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! install == --namespace=* ]]
++ '[' -n install ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace bundle install
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! install == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n install ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// bundle install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n bundle install
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! install == \-\n ]]
++ '[' -n install ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n bundle install
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=bundle
++ shift 2
++ par=install
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! '' == \i\n\s\t\a\l\l ]]
++ '[' -n '' ']'
++ i=1
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 1 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN bundle install
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=bundle
+ export ENTANDO_CLI_COMMAND=bundle
+ ENTANDO_CLI_COMMAND=bundle
+ shift
+ case "$cmd" in
+ _ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
+ /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ node-cmd-wrapper =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 4 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == --namespace=* ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == --namespace=* ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! install == --namespace=* ]]
++ '[' -n install ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! install == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n install ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\n ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\n ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! install == \-\n ]]
++ '[' -n install ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=node-cmd-wrapper
++ shift 2
++ par=bundle
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! ENT wrapper for the node command "bundle" == \b\u\n\d\l\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! install == \b\u\n\d\l\e ]]
++ '[' -n install ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \b\u\n\d\l\e ]]
++ '[' -n '' ']'
++ i=3
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=node-cmd-wrapper
+ export ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ shift
+ case "$cmd" in
+ '[' node-cmd-wrapper = k ']'
+ local FOUND=false
+ local mod_script=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+ '[' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper ']'
+ FOUND=true
+ source /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' install
++ PRINT_BANNER=false
++ [[ bundle = \-\-\b\a\n\n\e\r ]]
++ WRAPPED_COMMAND=bundle
++ shift
++ DESC='ENT wrapper for the node command "bundle"'
++ shift
++ [[ bundle = \-\-\h\e\l\p ]]
++ [[ install = \-\-\c\m\p\l\t ]]
++ [[ install = \-\-\e\n\t\-\h\e\l\p ]]
++ ORIGINAL_DIR=/home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++++ dirname /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
+++ pwd
++ DIR=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/../..
++ . s/_base.sh
+++ '[' -z '' ']'
+++ '[' -z '5.1.16(1)-release' ']'
+++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1 = '' ']'
+++ true
+++ return 0
++ cd /home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++ false
++ _ent-bundle install
++ case "$1" in
++ _ent-bundle-install install
++ local VERSION_TO_INSTALL CONFLICT_STRATEGY
+++ parse_help_option install
+++ case "${!#}" in
+++ echo ''
++ HH=
++ bgn_help_parsing :bundle-cli-install install
++ '[' : '!=' : ']'
++ ENT_MODULE_FILE=
++ shift
+++ parse_help_option install
+++ case "${!#}" in
+++ echo ''
++ HH=
++ HH_COMPLETION_REQUEST=false
++ HH_HELP_REQUEST=false
++ HH_COMMAND=false
++ case "$HH" in
++ HH_COMMAND=true
++ test -n ''
++ args_or_ask -h '' -n VERSION_TO_INSTALL '--version/ver//defines the specific version to install' install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ case "$2" in
++ shift 2
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=VERSION_TO_INSTALL
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var VERSION_TO_INSTALL ''
++ '[' -z '' ']'
++ read -r -d '' VERSION_TO_INSTALL
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --version= install
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --version= = -P ']'
++ '[' --version= = -n ']'
++ par=--version=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! install == --version=* ]]
++ '[' -n install ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == --version=* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --version install
++ local N=1
++ local REGEX=0
++ '[' --version = -- ']'
++ '[' --version = -p ']'
++ '[' --version = -P ']'
++ '[' --version = -n ']'
++ par=--version
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! install == \-\-\v\e\r\s\i\o\n ]]
++ '[' -n install ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == \-\-\v\e\r\s\i\o\n ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --version 'defines the specific version to install'
++ local val_name=--version
++ local 'val_msg=defines the specific version to install'
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -h '' -n CONFLICT_STRATEGY '--conflict-strategy///strategy to adopt if the object is already present (CREATE|SKIP|OVERRIDE)' install
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ case "$2" in
++ shift 2
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=CONFLICT_STRATEGY
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var CONFLICT_STRATEGY ''
++ '[' -z '' ']'
++ read -r -d '' CONFLICT_STRATEGY
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --conflict-strategy= install
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --conflict-strategy= = -P ']'
++ '[' --conflict-strategy= = -n ']'
++ par=--conflict-strategy=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! install == --conflict-strategy=* ]]
++ '[' -n install ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == --conflict-strategy=* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --conflict-strategy install
++ local N=1
++ local REGEX=0
++ '[' --conflict-strategy = -- ']'
++ '[' --conflict-strategy = -p ']'
++ '[' --conflict-strategy = -P ']'
++ '[' --conflict-strategy = -n ']'
++ par=--conflict-strategy
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! install == \-\-\c\o\n\f\l\i\c\t\-\s\t\r\a\t\e\g\y ]]
++ '[' -n install ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == \-\-\c\o\n\f\l\i\c\t\-\s\t\r\a\t\e\g\y ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --conflict-strategy 'strategy to adopt if the object is already present (CREATE|SKIP|OVERRIDE)'
++ local val_name=--conflict-strategy
++ local 'val_msg=strategy to adopt if the object is already present (CREATE|SKIP|OVERRIDE)'
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ end_help_parsing
++ test -n ''
++ HH=
++ require_develop_checked
++ '[' true '!=' true ']'
+++ ent bundle info
++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile bundle info
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ bundle =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args bundle info
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 2 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options bundle info
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS bundle info
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option bundle info
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// bundle info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= bundle info
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! info == --namespace=* ]]
++ '[' -n info ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace bundle info
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! info == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n info ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// bundle info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n bundle info
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! info == \-\n ]]
++ '[' -n info ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n bundle info
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=bundle
++ shift 2
++ par=info
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! '' == \i\n\f\o ]]
++ '[' -n '' ']'
++ i=1
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 1 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN bundle info
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=bundle
+ export ENTANDO_CLI_COMMAND=bundle
+ ENTANDO_CLI_COMMAND=bundle
+ shift
+ case "$cmd" in
+ _ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
+ /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ node-cmd-wrapper =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 4 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == --namespace=* ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == --namespace=* ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! info == --namespace=* ]]
++ '[' -n info ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! info == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n info ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\n ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\n ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! info == \-\n ]]
++ '[' -n info ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=node-cmd-wrapper
++ shift 2
++ par=bundle
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! ENT wrapper for the node command "bundle" == \b\u\n\d\l\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! info == \b\u\n\d\l\e ]]
++ '[' -n info ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \b\u\n\d\l\e ]]
++ '[' -n '' ']'
++ i=3
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=node-cmd-wrapper
+ export ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ shift
+ case "$cmd" in
+ '[' node-cmd-wrapper = k ']'
+ local FOUND=false
+ local mod_script=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+ '[' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper ']'
+ FOUND=true
+ source /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' info
++ PRINT_BANNER=false
++ [[ bundle = \-\-\b\a\n\n\e\r ]]
++ WRAPPED_COMMAND=bundle
++ shift
++ DESC='ENT wrapper for the node command "bundle"'
++ shift
++ [[ bundle = \-\-\h\e\l\p ]]
++ [[ info = \-\-\c\m\p\l\t ]]
++ [[ info = \-\-\e\n\t\-\h\e\l\p ]]
++ ORIGINAL_DIR=/home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++++ dirname /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
+++ pwd
++ DIR=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/../..
++ . s/_base.sh
+++ '[' -z '' ']'
+++ '[' -z '5.1.16(1)-release' ']'
+++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1 = '' ']'
+++ true
+++ return 0
++ cd /home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++ false
++ _ent-bundle info
++ case "$1" in
++ _ent-entando-bundle-cli info
++ args_or_ask -a -n P1 1///module info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ ARG=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=P1
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var P1 ''
++ '[' -z '' ']'
++ read -r -d '' P1
++ return 0
++ false
++ true
++ assert_num 'the index of positional argument' 1
++ _assert_regex_nn 'the index of positional argument' 1 '^[0-9]*$' '' number ''
++ local CMPRES=0
++ '[' 'the index of positional argument' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn 'the index of positional argument' 1 ''
++ local pre
++ '[' -n '' ']'
++ '[' -z 1 ']'
++ return 0
++ local FATAL=false
++ '[' '' = fatal ']'
++ LC_COLLATE=C
++ [[ 1 =~ ^[0-9]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ index_of_arg -p -n 1 '[^-]' info
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=1
++ shift 2
++ par='[^-]'
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! info == [^-]* ]]
++ i=1
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 1 -eq 100 ']'
++ '[' -n info ']'
++ return 1
++ found_at=1
++ val_name='Argument #1'
++ '[' 1 -ne 255 ']'
++ val_from_args=info
++ print_sub_help 'Argument #1' module
++ local 'val_name=Argument #1'
++ local val_msg=module
++ false
++ return 1
++ false
++ [[ 1 -eq 255 ]]
++ '[' -z module ']'
++ '[' -n '' ']'
++ local NULLABLE=true
++ local assertion=
++ true
++ '[' -z info ']'
++ local val=info
++ true
++ '[' -z info ']'
++ '[' -n '' ']'
++ _set_var P1 info
++ '[' -z info ']'
++ read -r -d '' P1
++ return 0
++ return 0
++ args_or_ask -a -n P2 2///command info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ ARG=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=P2
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var P2 ''
++ '[' -z '' ']'
++ read -r -d '' P2
++ return 0
++ false
++ true
++ assert_num 'the index of positional argument' 2
++ _assert_regex_nn 'the index of positional argument' 2 '^[0-9]*$' '' number ''
++ local CMPRES=0
++ '[' 'the index of positional argument' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn 'the index of positional argument' 2 ''
++ local pre
++ '[' -n '' ']'
++ '[' -z 2 ']'
++ return 0
++ local FATAL=false
++ '[' '' = fatal ']'
++ LC_COLLATE=C
++ [[ 2 =~ ^[0-9]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ index_of_arg -p -n 2 '[^-]' info
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=2
++ shift 2
++ par='[^-]'
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! info == [^-]* ]]
++ i=1
++ N=1
++ '[' 1 -le 0 ']'
++ shift
++ true
++ case "$REGEX" in
++ [[ ! '' == [^-]* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_name='Argument #2'
++ '[' 255 -ne 255 ']'
++ val_from_args=
++ print_sub_help 'Argument #2' command
++ local 'val_name=Argument #2'
++ local val_msg=command
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -F -n HELP_INVOKED --help///help info
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ FLAGANDVAR=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=HELP_INVOKED
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var HELP_INVOKED ''
++ '[' -z '' ']'
++ read -r -d '' HELP_INVOKED
++ return 0
++ false
++ false
++ false
++ true
++ print_sub_help --help help
++ local val_name=--help
++ local val_msg=help
++ false
++ return 1
++ index_of_arg --help info
++ local N=1
++ local REGEX=0
++ '[' --help = -- ']'
++ '[' --help = -p ']'
++ '[' --help = -P ']'
++ '[' --help = -n ']'
++ par=--help
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! info == \-\-\h\e\l\p ]]
++ '[' -n info ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == \-\-\h\e\l\p ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg -p --help= info
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --help= = -P ']'
++ '[' --help= = -n ']'
++ par=--help=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! info == --help=* ]]
++ '[' -n info ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == --help=* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ val_from_args=
++ '[' -z '' ']'
++ '[' 255 -ne 255 ']'
++ true
++ '[' -n '' ']'
++ false
++ _set_var HELP_INVOKED false
++ '[' -z false ']'
++ read -r -d '' HELP_INVOKED
++ return 0
++ return 1
++ [[ info == \a\p\i ]]
++ export ENTANDO_CLI_CRANE_BIN=/home/giovanni/.entando/bin/crane.v0.9.0
++ ENTANDO_CLI_CRANE_BIN=/home/giovanni/.entando/bin/crane.v0.9.0
++ export ENTANDO_CLI_DOCKER_CONFIG_PATH
++ export ENTANDO_BUNDLE_CLI_BIN_NAME
++ ENTANDO_CLI_DEBUG=
++ ENTANDO_OPT_OVERRIDE_HOME_VAR=false
++ _ent-run-internal-npm-tool entando-bundle-cli info
++ local TOOL_NAME=entando-bundle-cli
++ shift
++ require_develop_checked
++ '[' true '!=' true ']'
++ node.activate_environment
++ ENT_NODE_DIR=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0
++ export PATH=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ PATH=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ _ent-npm-init-rc
++ '[' -d /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0 ']'
++ _ent-setup_home_env_variables
+++ _dist_directory
+++ __cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/../../dist
+++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/../../dist
+++ echo /home/giovanni/.entando/ent/v7.1.1/dist
++ export ENTANDO_CLI_HOME_OVERRIDE=/home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ ENTANDO_CLI_HOME_OVERRIDE=/home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ mkdir -p /home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ '[' linux = windows ']'
++ [[ -z '' ]]
++ export ENTANDO_CLI_ORIGINAL_HOME=/home/giovanni
++ ENTANDO_CLI_ORIGINAL_HOME=/home/giovanni
++ [[ false = \t\r\u\e ]]
++ D=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/
++ F=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/npmrc
++ mkdir -p /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/
++ echo -n ''
++ chmod 600 /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/npmrc
++ _print_npm_rc
++ echo //npm.pkg.github.com/:_authToken=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
++ echo @entando:registry=https://npm.pkg.github.com
++ case "$SYS_OS_TYPE" in
++ ENT_NODE_CMDEXT=
++ ENT_NODE_BINS=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin
++ ENT_NODE_MODS=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/lib/node_modules
++ ENT_NODE_BINS_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin
++ ENT_NODE_BIN_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/node
++ ENT_NPM_BIN_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/npm
++ ENT_OPTS_ENTANDO=/home/giovanni/.entando/ent/v7.1.1/opt/entando
++ PATH=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin:/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ local BIN_PATH
++ _ent-npm.get-internal-tool-path BIN_PATH entando-bundle-cli
++ false
++ _set_var BIN_PATH /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli BIN_PATH entando-bundle-cli
++ '[' -z /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli ']'
++ read -r -d '' BIN_PATH
++ return 0
++ '[' info == --ent-get-version ']'
++ false
++ true
++ false
++ /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli info
++ _strip_colors
++ perl -pe 's/\e\[[0-9;]*m(?:\e\[K)?//g'
++ [[ info = \-\-\h\e\l\p ]]
++ [[ -z info ]]
+ true
+ index_of_arg --AND bundle 'ENT wrapper for the node command "bundle"' info
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! bundle == \-\-\A\N\D ]]
+ '[' -n bundle ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! ENT wrapper for the node command "bundle" == \-\-\A\N\D ]]
+ '[' -n 'ENT wrapper for the node command "bundle"' ']'
+ '[' 1 -lt 100 ']'
+ i=2
+ shift
+ [[ ! info == \-\-\A\N\D ]]
+ '[' -n info ']'
+ '[' 2 -lt 100 ']'
+ i=3
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=4
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 4 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 3
+ '[' -z '' ']'
+ break
+ index_of_arg --AND info
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! info == \-\-\A\N\D ]]
+ '[' -n info ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=2
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 2 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 1
+ '[' -z '' ']'
+ break
++ local 'bundle_info=--- Bundle info ---
Name: entando-upgrade
Description: entando-upgrade bundle
Version: 0.0.1
--- Config values ---
docker-organization: entandodemo'
+++ ent bundle cr
+++ grep '^metadata:' -A 100
+++ grep '\sname:'
+++ sed 's/.*:\s*//'
+++ xargs
+++ head -n 1
++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile bundle cr
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ bundle =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args bundle cr
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 2 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options bundle cr
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS bundle cr
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option bundle cr
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// bundle cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= bundle cr
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! cr == --namespace=* ]]
++ '[' -n cr ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace bundle cr
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! cr == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n cr ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// bundle cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n bundle cr
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! cr == \-\n ]]
++ '[' -n cr ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=3
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n bundle cr
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=bundle
++ shift 2
++ par=cr
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! '' == \c\r ]]
++ '[' -n '' ']'
++ i=1
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 1 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN bundle cr
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=bundle
+ export ENTANDO_CLI_COMMAND=bundle
+ ENTANDO_CLI_COMMAND=bundle
+ shift
+ case "$cmd" in
+ _ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
+ /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/ent node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ . s/attach-utils.sh
++ . s/node-utils.sh
+++ node.reset_environment
+++ ENT_NODE_VER=
+++ ENT_NODE_DIR=
+++ ENT_NODE_BINS=
+++ ENT_NODE_MODS=
+++ ENT_NODE_BIN_NATIVE=
+++ ENT_NPM_BIN_NATIVE=
+++ NODE_PATH=
+++ return 0
++ . s/kube-utils.sh
++ reload_cfg /home/giovanni/.entando/.global-cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/.global-cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/.global-cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/.global-cfg
++ '[' '!' -f /home/giovanni/.entando/.global-cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/.global-cfg
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE=test-giovanni-ps-dev
+++ DESIGNATED_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_PROFILE_HOME =~ ^# ]]
++ [[ -z DESIGNATED_PROFILE_HOME ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_PROFILE_HOME silent
++ _assert_regex_nn CFGVAR DESIGNATED_PROFILE_HOME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_PROFILE_HOME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_PROFILE_HOME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_PROFILE_HOME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ sanitized=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ false
++ eval DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
+++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ return 0
++ handle_forced_profile node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local pv=ENTANDO_ENT_FORCE_PROFILE_0e7e8d89__dev_pts_2
++ local phv=ENTANDO_ENT_FORCE_PROFILE_HOME_0e7e8d89__dev_pts_2
++ [[ node-cmd-wrapper =~ --profile=.* ]]
++ local pvv phvv
++ '[' -n '' ']'
++ pvv=
++ phvv=
++ [[ -n '' ]]
++ parse_global_args node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ ENTANDO_CONSUMED_ARGS=0
++ '[' 4 -gt 0 ']'
++ case "$1" in
++ break
++ export ENTANDO_ENT_DEBUG
++ export ENTANDO_ENT_FORCE_PROFILE
++ shift 0
++ case "$ENTANDO_ENT_FORCE_PROFILE" in
++ '[' -n test-giovanni-ps-dev ']'
++ assert_ext_ic_id '' test-giovanni-ps-dev silent
++ _assert_regex_nn '' test-giovanni-ps-dev '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni-ps-dev silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni-ps-dev ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni-ps-dev =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ DESIGNATED_PROFILE_HOME=/home/giovanni/.entando/profiles/test-giovanni-ps-dev
++ '[' -n test-giovanni-ps-dev ']'
++ activate_application_workdir
++ '[' -n test-giovanni-ps-dev ']'
++ '[' -d /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w ']'
++ ENT_WORK_DIR=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ CFG_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ return 0
++ reload_cfg /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ local PRINT=false
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --print ']'
++ local PRE=
++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg = --pre ']'
++ local config_file=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/w/.cfg
++ IFS==
++ read -r var value
++ [[ JQ_PATH =~ ^# ]]
++ [[ -z JQ_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR JQ_PATH silent
++ _assert_regex_nn CFGVAR JQ_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR JQ_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z JQ_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ JQ_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ sanitized=/home/giovanni/.entando/bin/jq.1.6
++ false
++ eval JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
+++ JQ_PATH=/home/giovanni/.entando/bin/jq.1.6
++ IFS==
++ read -r var value
++ [[ CRANE_PATH =~ ^# ]]
++ [[ -z CRANE_PATH ]]
++ assert_ext_ic_id_with_arr CFGVAR CRANE_PATH silent
++ _assert_regex_nn CFGVAR CRANE_PATH '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR CRANE_PATH silent
++ local pre
++ '[' -n '' ']'
++ '[' -z CRANE_PATH ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ CRANE_PATH =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q /home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ sanitized=/home/giovanni/.entando/bin/crane.v0.9.0
++ false
++ eval CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
+++ CRANE_PATH=/home/giovanni/.entando/bin/crane.v0.9.0
++ IFS==
++ read -r var value
++ [[ ENT_NODE_VER =~ ^# ]]
++ [[ -z ENT_NODE_VER ]]
++ assert_ext_ic_id_with_arr CFGVAR ENT_NODE_VER silent
++ _assert_regex_nn CFGVAR ENT_NODE_VER '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENT_NODE_VER silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENT_NODE_VER ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENT_NODE_VER =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q v14.20.0
++ sanitized=v14.20.0
++ sanitized=v14.20.0
++ false
++ eval ENT_NODE_VER=v14.20.0
+++ ENT_NODE_VER=v14.20.0
++ IFS==
++ read -r var value
++ [[ WAS_DEVELOP_CHECKED =~ ^# ]]
++ [[ -z WAS_DEVELOP_CHECKED ]]
++ assert_ext_ic_id_with_arr CFGVAR WAS_DEVELOP_CHECKED silent
++ _assert_regex_nn CFGVAR WAS_DEVELOP_CHECKED '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR WAS_DEVELOP_CHECKED silent
++ local pre
++ '[' -n '' ']'
++ '[' -z WAS_DEVELOP_CHECKED ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ WAS_DEVELOP_CHECKED =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q true
++ sanitized=true
++ sanitized=true
++ false
++ eval WAS_DEVELOP_CHECKED=true
+++ WAS_DEVELOP_CHECKED=true
++ IFS==
++ read -r var value
++ return 0
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ rescan-sys-env
++ true
++ reload_cfg
++ local PRINT=false
++ '[' '' = --print ']'
++ local PRE=
++ '[' '' = --pre ']'
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' '!' -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ']'
++ local sanitized=
+++ cat /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ IFS==
++ read -r var value
++ [[ ENTANDO_APPNAME =~ ^# ]]
++ [[ -z ENTANDO_APPNAME ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_APPNAME silent
++ _assert_regex_nn CFGVAR ENTANDO_APPNAME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_APPNAME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_APPNAME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_APPNAME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_APPNAME=test-giovanni
+++ ENTANDO_APPNAME=test-giovanni
++ IFS==
++ read -r var value
++ [[ ENTANDO_NAMESPACE =~ ^# ]]
++ [[ -z ENTANDO_NAMESPACE ]]
++ assert_ext_ic_id_with_arr CFGVAR ENTANDO_NAMESPACE silent
++ _assert_regex_nn CFGVAR ENTANDO_NAMESPACE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR ENTANDO_NAMESPACE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z ENTANDO_NAMESPACE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ ENTANDO_NAMESPACE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni
++ sanitized=test-giovanni
++ sanitized=test-giovanni
++ false
++ eval ENTANDO_NAMESPACE=test-giovanni
+++ ENTANDO_NAMESPACE=test-giovanni
++ IFS==
++ read -r var value
++ [[ THIS_PROFILE =~ ^# ]]
++ [[ -z THIS_PROFILE ]]
++ assert_ext_ic_id_with_arr CFGVAR THIS_PROFILE silent
++ _assert_regex_nn CFGVAR THIS_PROFILE '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR THIS_PROFILE silent
++ local pre
++ '[' -n '' ']'
++ '[' -z THIS_PROFILE ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ THIS_PROFILE =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ sanitized=test-giovanni-ps-dev
++ false
++ eval THIS_PROFILE=test-giovanni-ps-dev
+++ THIS_PROFILE=test-giovanni-ps-dev
++ IFS==
++ read -r var value
++ [[ DESIGNATED_KUBECTX =~ ^# ]]
++ [[ -z DESIGNATED_KUBECTX ]]
++ assert_ext_ic_id_with_arr CFGVAR DESIGNATED_KUBECTX silent
++ _assert_regex_nn CFGVAR DESIGNATED_KUBECTX '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR DESIGNATED_KUBECTX silent
++ local pre
++ '[' -n '' ']'
++ '[' -z DESIGNATED_KUBECTX ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ DESIGNATED_KUBECTX =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q ps-dev
++ sanitized=ps-dev
++ sanitized=ps-dev
++ false
++ eval DESIGNATED_KUBECTX=ps-dev
+++ DESIGNATED_KUBECTX=ps-dev
++ IFS==
++ read -r var value
++ [[ LATEST_URL_SCHEME =~ ^# ]]
++ [[ -z LATEST_URL_SCHEME ]]
++ assert_ext_ic_id_with_arr CFGVAR LATEST_URL_SCHEME silent
++ _assert_regex_nn CFGVAR LATEST_URL_SCHEME '^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$' '' identifier silent
++ local CMPRES=0
++ '[' CFGVAR = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn CFGVAR LATEST_URL_SCHEME silent
++ local pre
++ '[' -n '' ']'
++ '[' -z LATEST_URL_SCHEME ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ LATEST_URL_SCHEME =~ ^[a-zA-Z0-9_-]*\[?[a-zA-Z0-9_-]*\]?$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ printf -v sanitized %q https
++ sanitized=https
++ sanitized=https
++ false
++ eval LATEST_URL_SCHEME=https
+++ LATEST_URL_SCHEME=https
++ IFS==
++ read -r var value
++ return 0
++ mkdir -p /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w
++ XU_STATUS_FILE=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.status
++ '[' -n '' ']'
++ '[' -n '' ']'
++ kubectl_update_once_options node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ KUBECTL_ONCE_OPTIONS=
++ determine_namespace NS node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local var_name=NS
++ shift
++ local ns
+++ parse_help_option node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
+++ case "${!#}" in
+++ echo ''
++ HH=
++ args_or_ask -n ns --namespace/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ false
++ index_of_arg -p --namespace= node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --namespace= = -P ']'
++ '[' --namespace= = -n ']'
++ par=--namespace=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == --namespace=* ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == --namespace=* ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == --namespace=* ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! cr == --namespace=* ]]
++ '[' -n cr ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == --namespace=* ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg --namespace node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local N=1
++ local REGEX=0
++ '[' --namespace = -- ']'
++ '[' --namespace = -p ']'
++ '[' --namespace = -P ']'
++ '[' --namespace = -n ']'
++ par=--namespace
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! cr == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n cr ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help --namespace ''
++ local val_name=--namespace
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -n -s ns -n/ext_ic_id// node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ SPACE_SEP=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=ns
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var ns ''
++ '[' -z '' ']'
++ read -r -d '' ns
++ return 0
++ false
++ false
++ false
++ false
++ true
++ index_of_arg -- -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local N=1
++ local REGEX=0
++ '[' -- = -- ']'
++ REGEX=0
++ shift
++ par=-n
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! node-cmd-wrapper == \-\n ]]
++ '[' -n node-cmd-wrapper ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! bundle == \-\n ]]
++ '[' -n bundle ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! ENT wrapper for the node command "bundle" == \-\n ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 2 -lt 100 ']'
++ i=3
++ shift
++ [[ ! cr == \-\n ]]
++ '[' -n cr ']'
++ '[' 3 -lt 100 ']'
++ i=4
++ shift
++ [[ ! '' == \-\n ]]
++ '[' -n '' ']'
++ i=5
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 5 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -ne 255 ']'
++ '[' 255 -eq 255 ']'
++ index_of_arg -n node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ local N=1
++ local REGEX=0
++ '[' -n = -- ']'
++ '[' -n = -p ']'
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=node-cmd-wrapper
++ shift 2
++ par=bundle
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! ENT wrapper for the node command "bundle" == \b\u\n\d\l\e ]]
++ '[' -n 'ENT wrapper for the node command "bundle"' ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! cr == \b\u\n\d\l\e ]]
++ '[' -n cr ']'
++ '[' 1 -lt 100 ']'
++ i=2
++ shift
++ [[ ! '' == \b\u\n\d\l\e ]]
++ '[' -n '' ']'
++ i=3
++ N=-1
++ '[' -1 -le 0 ']'
++ break
++ '[' 3 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_from_args=
++ print_sub_help -n ''
++ local val_name=-n
++ local val_msg=
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ local dummy
++ '[' -n '' ']'
++ ns=test-giovanni
++ [[ -z test-giovanni ]]
++ '[' -n test-giovanni ']'
++ assert_ext_ic_id '' test-giovanni silent
++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
++ local CMPRES=0
++ '[' '' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn '' test-giovanni silent
++ local pre
++ '[' -n '' ']'
++ '[' -z test-giovanni ']'
++ return 0
++ local FATAL=false
++ '[' silent = fatal ']'
++ LC_COLLATE=C
++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ _set_var NS test-giovanni
++ '[' -z test-giovanni ']'
++ read -r -d '' NS
++ return 0
++ return 0
++ local NS=test-giovanni
++ case "$NS" in
++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
++ local CTX=ps-dev
++ '[' -n ps-dev ']'
++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
++ setup_kubectl
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n '' ']'
++ ENTANDO_KUBECTL_MODE=AUTODETECT
++ false
++ [[ -n ps-dev ]]
++ ENTANDO_KUBECTL_AUTO_DETECTED=BASE-KUBECTL
++ check_kubectl
++ true
+ cd -
+ RUN node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
+ upgrade_project_file .ent/ent-prj .ent-prj
+ local N=.ent/ent-prj
+ local O=.ent-prj
+ '[' -f .ent-prj ']'
+ reload_cfg .ent/ent-prj
+ local PRINT=false
+ '[' .ent/ent-prj = --print ']'
+ local PRE=
+ '[' .ent/ent-prj = --pre ']'
+ local config_file=.ent/ent-prj
+ '[' '!' -f .ent/ent-prj ']'
+ return 0
+ upgrade_project_file .ent/ent-state .ent-state
+ local N=.ent/ent-state
+ local O=.ent-state
+ '[' -f .ent-state ']'
+ reload_cfg .ent/ent-state
+ local PRINT=false
+ '[' .ent/ent-state = --print ']'
+ local PRE=
+ '[' .ent/ent-state = --pre ']'
+ local config_file=.ent/ent-state
+ '[' '!' -f .ent/ent-state ']'
+ return 0
+ export 'ENTANDO_HELP_FUNCTIONS_TO_LIST=_ent-bundle _ent-bundler _ent-jhipster'
+ ENTANDO_HELP_FUNCTIONS_TO_LIST='_ent-bundle _ent-bundler _ent-jhipster'
+ export 'ENTANDO_HELP_MODULE_NOT_TO_LIST=host node-cmd-wrapper'
+ ENTANDO_HELP_MODULE_NOT_TO_LIST='host node-cmd-wrapper'
+ export ENTANDO_CLI_DEFAULT_DOCKER_REGISTRY
+ export ENTANDO_CLI_DEFAULT_HUB
+ true
+ cmd=node-cmd-wrapper
+ export ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ ENTANDO_CLI_COMMAND=node-cmd-wrapper
+ shift
+ case "$cmd" in
+ '[' node-cmd-wrapper = k ']'
+ local FOUND=false
+ local mod_script=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+ '[' -f /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper ']'
+ FOUND=true
+ source /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper bundle 'ENT wrapper for the node command "bundle"' cr
++ PRINT_BANNER=false
++ [[ bundle = \-\-\b\a\n\n\e\r ]]
++ WRAPPED_COMMAND=bundle
++ shift
++ DESC='ENT wrapper for the node command "bundle"'
++ shift
++ [[ bundle = \-\-\h\e\l\p ]]
++ [[ cr = \-\-\c\m\p\l\t ]]
++ [[ cr = \-\-\e\n\t\-\h\e\l\p ]]
++ ORIGINAL_DIR=/home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++++ dirname /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/ent-node-cmd-wrapper
+++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
+++ pwd
++ DIR=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod
++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin/mod/../..
++ . s/_base.sh
+++ '[' -z '' ']'
+++ '[' -z '5.1.16(1)-release' ']'
+++ '[' /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1 = '' ']'
+++ true
+++ return 0
++ cd /home/giovanni/Entando/entando-testing/test-giovanni-ps-dev/bundle-test
++ false
++ _ent-bundle cr
++ case "$1" in
++ shift
++ _ent-entando-bundle-cli generate-cr
++ args_or_ask -a -n P1 1///module generate-cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ ARG=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=P1
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var P1 ''
++ '[' -z '' ']'
++ read -r -d '' P1
++ return 0
++ false
++ true
++ assert_num 'the index of positional argument' 1
++ _assert_regex_nn 'the index of positional argument' 1 '^[0-9]*$' '' number ''
++ local CMPRES=0
++ '[' 'the index of positional argument' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn 'the index of positional argument' 1 ''
++ local pre
++ '[' -n '' ']'
++ '[' -z 1 ']'
++ return 0
++ local FATAL=false
++ '[' '' = fatal ']'
++ LC_COLLATE=C
++ [[ 1 =~ ^[0-9]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ index_of_arg -p -n 1 '[^-]' generate-cr
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=1
++ shift 2
++ par='[^-]'
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! generate-cr == [^-]* ]]
++ i=1
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 1 -eq 100 ']'
++ '[' -n generate-cr ']'
++ return 1
++ found_at=1
++ val_name='Argument #1'
++ '[' 1 -ne 255 ']'
++ val_from_args=generate-cr
++ print_sub_help 'Argument #1' module
++ local 'val_name=Argument #1'
++ local val_msg=module
++ false
++ return 1
++ false
++ [[ 1 -eq 255 ]]
++ '[' -z module ']'
++ '[' -n '' ']'
++ local NULLABLE=true
++ local assertion=
++ true
++ '[' -z generate-cr ']'
++ local val=generate-cr
++ true
++ '[' -z generate-cr ']'
++ '[' -n '' ']'
++ _set_var P1 generate-cr
++ '[' -z generate-cr ']'
++ read -r -d '' P1
++ return 0
++ return 0
++ args_or_ask -a -n P2 2///command generate-cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ ARG=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=P2
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var P2 ''
++ '[' -z '' ']'
++ read -r -d '' P2
++ return 0
++ false
++ true
++ assert_num 'the index of positional argument' 2
++ _assert_regex_nn 'the index of positional argument' 2 '^[0-9]*$' '' number ''
++ local CMPRES=0
++ '[' 'the index of positional argument' = --neg ']'
++ '[' '' '!=' '' ']'
++ assert_nn 'the index of positional argument' 2 ''
++ local pre
++ '[' -n '' ']'
++ '[' -z 2 ']'
++ return 0
++ local FATAL=false
++ '[' '' = fatal ']'
++ LC_COLLATE=C
++ [[ 2 =~ ^[0-9]*$ ]]
++ '[' 0 = 0 ']'
++ return 0
++ index_of_arg -p -n 2 '[^-]' generate-cr
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' -n = -P ']'
++ '[' -n = -n ']'
++ N=2
++ shift 2
++ par='[^-]'
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! generate-cr == [^-]* ]]
++ i=1
++ N=1
++ '[' 1 -le 0 ']'
++ shift
++ true
++ case "$REGEX" in
++ [[ ! '' == [^-]* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ val_name='Argument #2'
++ '[' 255 -ne 255 ']'
++ val_from_args=
++ print_sub_help 'Argument #2' command
++ local 'val_name=Argument #2'
++ local val_msg=command
++ false
++ return 1
++ false
++ [[ 255 -eq 255 ]]
++ [[ -z '' ]]
++ true
++ return 255
++ args_or_ask -F -n HELP_INVOKED --help///help generate-cr
++ local NEVER_ASK=false
++ local ALWAYS_ASK=false
++ local FLAG=false
++ local FLAGANDVAR=false
++ local ARG=false
++ local PRESERVE=false
++ local PRINT_HELP=false
++ local JUST_PRINT_HELP=false
++ local SPACE_SEP=false
++ local PRINT_COMPLETION_CODE=false
++ local IS_DEFAULT=false
++ JUST_PRINT_HELP=false
++ true
++ case "$1" in
++ FLAGANDVAR=true
++ shift
++ true
++ case "$1" in
++ NEVER_ASK=true
++ shift
++ true
++ case "$1" in
++ break
++ false
++ local var_name=HELP_INVOKED
++ shift
++ local val_name val_type val_def val_msg
++ IFS=/
++ read -r val_name val_type val_def val_msg
++ shift
++ false
++ false
++ false
++ _set_var HELP_INVOKED ''
++ '[' -z '' ']'
++ read -r -d '' HELP_INVOKED
++ return 0
++ false
++ false
++ false
++ true
++ print_sub_help --help help
++ local val_name=--help
++ local val_msg=help
++ false
++ return 1
++ index_of_arg --help generate-cr
++ local N=1
++ local REGEX=0
++ '[' --help = -- ']'
++ '[' --help = -p ']'
++ '[' --help = -P ']'
++ '[' --help = -n ']'
++ par=--help
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! generate-cr == \-\-\h\e\l\p ]]
++ '[' -n generate-cr ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == \-\-\h\e\l\p ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ index_of_arg -p --help= generate-cr
++ local N=1
++ local REGEX=0
++ '[' -p = -- ']'
++ '[' -p = -p ']'
++ REGEX=1
++ shift
++ '[' --help= = -P ']'
++ '[' --help= = -n ']'
++ par=--help=
++ shift
++ local i=0
++ true
++ case "$REGEX" in
++ [[ ! generate-cr == --help=* ]]
++ '[' -n generate-cr ']'
++ '[' 0 -lt 100 ']'
++ i=1
++ shift
++ [[ ! '' == --help=* ]]
++ '[' -n '' ']'
++ i=2
++ N=0
++ '[' 0 -le 0 ']'
++ break
++ '[' 2 -eq 100 ']'
++ '[' -n '' ']'
++ return 255
++ found_at=255
++ '[' 255 -eq 255 ']'
++ val_from_args=
++ '[' -z '' ']'
++ '[' 255 -ne 255 ']'
++ true
++ '[' -n '' ']'
++ false
++ _set_var HELP_INVOKED false
++ '[' -z false ']'
++ read -r -d '' HELP_INVOKED
++ return 0
++ return 1
++ [[ generate-cr == \a\p\i ]]
++ export ENTANDO_CLI_CRANE_BIN=/home/giovanni/.entando/bin/crane.v0.9.0
++ ENTANDO_CLI_CRANE_BIN=/home/giovanni/.entando/bin/crane.v0.9.0
++ export ENTANDO_CLI_DOCKER_CONFIG_PATH
++ export ENTANDO_BUNDLE_CLI_BIN_NAME
++ ENTANDO_CLI_DEBUG=
++ ENTANDO_OPT_OVERRIDE_HOME_VAR=false
++ _ent-run-internal-npm-tool entando-bundle-cli generate-cr
++ local TOOL_NAME=entando-bundle-cli
++ shift
++ require_develop_checked
++ '[' true '!=' true ']'
++ node.activate_environment
++ ENT_NODE_DIR=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0
++ export PATH=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ PATH=/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ _ent-npm-init-rc
++ '[' -d /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0 ']'
++ _ent-setup_home_env_variables
+++ _dist_directory
+++ __cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/../../dist
+++ cd /home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/../../dist
+++ echo /home/giovanni/.entando/ent/v7.1.1/dist
++ export ENTANDO_CLI_HOME_OVERRIDE=/home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ ENTANDO_CLI_HOME_OVERRIDE=/home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ mkdir -p /home/giovanni/.entando/ent/v7.1.1/dist/opt/home
++ '[' linux = windows ']'
++ [[ -z '' ]]
++ export ENTANDO_CLI_ORIGINAL_HOME=/home/giovanni
++ ENTANDO_CLI_ORIGINAL_HOME=/home/giovanni
++ [[ false = \t\r\u\e ]]
++ D=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/
++ F=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/npmrc
++ mkdir -p /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/
++ echo -n ''
++ chmod 600 /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/etc/npmrc
++ _print_npm_rc
++ echo //npm.pkg.github.com/:_authToken=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
++ echo @entando:registry=https://npm.pkg.github.com
++ case "$SYS_OS_TYPE" in
++ ENT_NODE_CMDEXT=
++ ENT_NODE_BINS=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin
++ ENT_NODE_MODS=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/lib/node_modules
++ ENT_NODE_BINS_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin
++ ENT_NODE_BIN_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/node
++ ENT_NPM_BIN_NATIVE=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/npm
++ ENT_OPTS_ENTANDO=/home/giovanni/.entando/ent/v7.1.1/opt/entando
++ PATH=/home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin:/home/giovanni/.entando/ent/v7.1.1/cli/v7.1.1/bin:/home/giovanni/.asdf/shims:/home/giovanni/.asdf/bin:/home/giovanni/.cargo/bin:/home/giovanni/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:/usr/sbin:/sbin:/opt/bin:/home/giovanni/bin:/home/giovanni/.local/bin:/home/giovanni/.cargo/bin:/home/giovanni/.pyenv/bin:bin
++ local BIN_PATH
++ _ent-npm.get-internal-tool-path BIN_PATH entando-bundle-cli
++ false
++ _set_var BIN_PATH /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli BIN_PATH entando-bundle-cli
++ '[' -z /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli ']'
++ read -r -d '' BIN_PATH
++ return 0
++ '[' generate-cr == --ent-get-version ']'
++ false
++ true
++ false
++ /home/giovanni/.entando/ent/v7.1.1/opt/node-v14.20.0/bin/entando-bundle-cli generate-cr
++ _strip_colors
++ perl -pe 's/\e\[[0-9;]*m(?:\e\[K)?//g'
Retrieving bundle image tags... done
Generating Entando custom resource descriptor... done
++ return 0
+ true
+ index_of_arg --AND bundle 'ENT wrapper for the node command "bundle"' cr
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! bundle == \-\-\A\N\D ]]
+ '[' -n bundle ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! ENT wrapper for the node command "bundle" == \-\-\A\N\D ]]
+ '[' -n 'ENT wrapper for the node command "bundle"' ']'
+ '[' 1 -lt 100 ']'
+ i=2
+ shift
+ [[ ! cr == \-\-\A\N\D ]]
+ '[' -n cr ']'
+ '[' 2 -lt 100 ']'
+ i=3
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=4
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 4 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 3
+ '[' -z '' ']'
+ break
+ index_of_arg --AND cr
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! cr == \-\-\A\N\D ]]
+ '[' -n cr ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=2
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 2 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 1
+ '[' -z '' ']'
+ break
++ ENT_PRJ_NAME=entando-upgrade-687e8bdb
++ _nn ENT_PRJ_NAME
++ test -n entando-upgrade-687e8bdb
++ return 0
++ '[' -z '' ']'
+++ grep -i Version:
+++ head -n 1
+++ sed 's/.*:\s*//'
+++ xargs
++ VERSION_TO_INSTALL=0.0.1
++ ecr.install-bundle entando-upgrade-687e8bdb 0.0.1 ''
++ local BUNDLE_NAME=entando-upgrade-687e8bdb
++ shift
++ local VERSION_TO_INSTALL=0.0.1
++ local CONFLICT_STRATEGY=
++ local INGRESS_URL TOKEN
++ ecr-prepare-action INGRESS_URL TOKEN
++ local VERBOSE=true
++ '[' INGRESS_URL == -s ']'
++ local var_url=INGRESS_URL
++ shift
++ local var_token=TOKEN
++ shift
++ true
++ print_current_profile_info
++ VERBOSE=false
++ '[' '' = -v ']'
++ false
++ '[' -n test-giovanni-ps-dev ']'
++ _log_i 'Currently using profile "test-giovanni-ps-dev"'
++ __log I '[I]' 0 'Currently using profile "test-giovanni-ps-dev"'
++ TP=I
++ shift
++ SY='[I]'
++ shift
++ LL=0
++ shift
++ [[ ! 0 =~ ^[0-9]+$ ]]
++ [[ ! EWID =~ I ]]
++ [[ 3 -lt 0 ]]
+++ date '+%Y-%m-%d %H-%M-%S'
++ echo -e '➤ [I] | 2022-10-17 15-54-21 | Currently using profile "test-giovanni-ps-dev"'
➤ [I] | 2022-10-17 15-54-21 | Currently using profile "test-giovanni-ps-dev"
++ false
++ local main_ingress ecr_ingress ignored url_scheme
++ app-get-main-ingresses url_scheme main_ingress ecr_ingress ignored
++ local res_var_scheme=url_scheme
++ local res_var_svc=main_ingress
++ local res_var_ecr=ecr_ingress
++ local res_var_apb=ignored
++ shift
++ OUT=()
++ local OUT
+++ _kubectl get ingresses.v1.networking.k8s.io -o json
+++ kubectl_update_once_options get ingresses.v1.networking.k8s.io -o json
+++ KUBECTL_ONCE_OPTIONS=
+++ determine_namespace NS get ingresses.v1.networking.k8s.io -o json
+++ local var_name=NS
+++ shift
+++ local ns
++++ parse_help_option get ingresses.v1.networking.k8s.io -o json
++++ case "${!#}" in
++++ echo ''
+++ HH=
+++ args_or_ask -n ns --namespace/ext_ic_id// get ingresses.v1.networking.k8s.io -o json
+++ local NEVER_ASK=false
+++ local ALWAYS_ASK=false
+++ local FLAG=false
+++ local FLAGANDVAR=false
+++ local ARG=false
+++ local PRESERVE=false
+++ local PRINT_HELP=false
+++ local JUST_PRINT_HELP=false
+++ local SPACE_SEP=false
+++ local PRINT_COMPLETION_CODE=false
+++ local IS_DEFAULT=false
+++ JUST_PRINT_HELP=false
+++ true
+++ case "$1" in
+++ NEVER_ASK=true
+++ shift
+++ true
+++ case "$1" in
+++ break
+++ false
+++ local var_name=ns
+++ shift
+++ local val_name val_type val_def val_msg
+++ IFS=/
+++ read -r val_name val_type val_def val_msg
+++ shift
+++ false
+++ false
+++ false
+++ _set_var ns ''
+++ '[' -z '' ']'
+++ read -r -d '' ns
+++ return 0
+++ false
+++ false
+++ false
+++ false
+++ false
+++ index_of_arg -p --namespace= get ingresses.v1.networking.k8s.io -o json
+++ local N=1
+++ local REGEX=0
+++ '[' -p = -- ']'
+++ '[' -p = -p ']'
+++ REGEX=1
+++ shift
+++ '[' --namespace= = -P ']'
+++ '[' --namespace= = -n ']'
+++ par=--namespace=
+++ shift
+++ local i=0
+++ true
+++ case "$REGEX" in
+++ [[ ! get == --namespace=* ]]
+++ '[' -n get ']'
+++ '[' 0 -lt 100 ']'
+++ i=1
+++ shift
+++ [[ ! ingresses.v1.networking.k8s.io == --namespace=* ]]
+++ '[' -n ingresses.v1.networking.k8s.io ']'
+++ '[' 1 -lt 100 ']'
+++ i=2
+++ shift
+++ [[ ! -o == --namespace=* ]]
+++ '[' -n -o ']'
+++ '[' 2 -lt 100 ']'
+++ i=3
+++ shift
+++ [[ ! json == --namespace=* ]]
+++ '[' -n json ']'
+++ '[' 3 -lt 100 ']'
+++ i=4
+++ shift
+++ [[ ! '' == --namespace=* ]]
+++ '[' -n '' ']'
+++ i=5
+++ N=0
+++ '[' 0 -le 0 ']'
+++ break
+++ '[' 5 -eq 100 ']'
+++ '[' -n '' ']'
+++ return 255
+++ found_at=255
+++ '[' 255 -eq 255 ']'
+++ index_of_arg --namespace get ingresses.v1.networking.k8s.io -o json
+++ local N=1
+++ local REGEX=0
+++ '[' --namespace = -- ']'
+++ '[' --namespace = -p ']'
+++ '[' --namespace = -P ']'
+++ '[' --namespace = -n ']'
+++ par=--namespace
+++ shift
+++ local i=0
+++ true
+++ case "$REGEX" in
+++ [[ ! get == \-\-\n\a\m\e\s\p\a\c\e ]]
+++ '[' -n get ']'
+++ '[' 0 -lt 100 ']'
+++ i=1
+++ shift
+++ [[ ! ingresses.v1.networking.k8s.io == \-\-\n\a\m\e\s\p\a\c\e ]]
+++ '[' -n ingresses.v1.networking.k8s.io ']'
+++ '[' 1 -lt 100 ']'
+++ i=2
+++ shift
+++ [[ ! -o == \-\-\n\a\m\e\s\p\a\c\e ]]
+++ '[' -n -o ']'
+++ '[' 2 -lt 100 ']'
+++ i=3
+++ shift
+++ [[ ! json == \-\-\n\a\m\e\s\p\a\c\e ]]
+++ '[' -n json ']'
+++ '[' 3 -lt 100 ']'
+++ i=4
+++ shift
+++ [[ ! '' == \-\-\n\a\m\e\s\p\a\c\e ]]
+++ '[' -n '' ']'
+++ i=5
+++ N=0
+++ '[' 0 -le 0 ']'
+++ break
+++ '[' 5 -eq 100 ']'
+++ '[' -n '' ']'
+++ return 255
+++ found_at=255
+++ val_from_args=
+++ print_sub_help --namespace ''
+++ local val_name=--namespace
+++ local val_msg=
+++ false
+++ return 1
+++ false
+++ [[ 255 -eq 255 ]]
+++ [[ -z '' ]]
+++ true
+++ return 255
+++ args_or_ask -n -s ns -n/ext_ic_id// get ingresses.v1.networking.k8s.io -o json
+++ local NEVER_ASK=false
+++ local ALWAYS_ASK=false
+++ local FLAG=false
+++ local FLAGANDVAR=false
+++ local ARG=false
+++ local PRESERVE=false
+++ local PRINT_HELP=false
+++ local JUST_PRINT_HELP=false
+++ local SPACE_SEP=false
+++ local PRINT_COMPLETION_CODE=false
+++ local IS_DEFAULT=false
+++ JUST_PRINT_HELP=false
+++ true
+++ case "$1" in
+++ NEVER_ASK=true
+++ shift
+++ true
+++ case "$1" in
+++ SPACE_SEP=true
+++ shift
+++ true
+++ case "$1" in
+++ break
+++ false
+++ local var_name=ns
+++ shift
+++ local val_name val_type val_def val_msg
+++ IFS=/
+++ read -r val_name val_type val_def val_msg
+++ shift
+++ false
+++ false
+++ false
+++ _set_var ns ''
+++ '[' -z '' ']'
+++ read -r -d '' ns
+++ return 0
+++ false
+++ false
+++ false
+++ false
+++ true
+++ index_of_arg -- -n get ingresses.v1.networking.k8s.io -o json
+++ local N=1
+++ local REGEX=0
+++ '[' -- = -- ']'
+++ REGEX=0
+++ shift
+++ par=-n
+++ shift
+++ local i=0
+++ true
+++ case "$REGEX" in
+++ [[ ! get == \-\n ]]
+++ '[' -n get ']'
+++ '[' 0 -lt 100 ']'
+++ i=1
+++ shift
+++ [[ ! ingresses.v1.networking.k8s.io == \-\n ]]
+++ '[' -n ingresses.v1.networking.k8s.io ']'
+++ '[' 1 -lt 100 ']'
+++ i=2
+++ shift
+++ [[ ! -o == \-\n ]]
+++ '[' -n -o ']'
+++ '[' 2 -lt 100 ']'
+++ i=3
+++ shift
+++ [[ ! json == \-\n ]]
+++ '[' -n json ']'
+++ '[' 3 -lt 100 ']'
+++ i=4
+++ shift
+++ [[ ! '' == \-\n ]]
+++ '[' -n '' ']'
+++ i=5
+++ N=0
+++ '[' 0 -le 0 ']'
+++ break
+++ '[' 5 -eq 100 ']'
+++ '[' -n '' ']'
+++ return 255
+++ found_at=255
+++ '[' 255 -ne 255 ']'
+++ '[' 255 -eq 255 ']'
+++ index_of_arg -n get ingresses.v1.networking.k8s.io -o json
+++ local N=1
+++ local REGEX=0
+++ '[' -n = -- ']'
+++ '[' -n = -p ']'
+++ '[' -n = -P ']'
+++ '[' -n = -n ']'
+++ N=get
+++ shift 2
+++ par=ingresses.v1.networking.k8s.io
+++ shift
+++ local i=0
+++ true
+++ case "$REGEX" in
+++ [[ ! -o == \i\n\g\r\e\s\s\e\s\.\v\1\.\n\e\t\w\o\r\k\i\n\g\.\k\8\s\.\i\o ]]
+++ '[' -n -o ']'
+++ '[' 0 -lt 100 ']'
+++ i=1
+++ shift
+++ [[ ! json == \i\n\g\r\e\s\s\e\s\.\v\1\.\n\e\t\w\o\r\k\i\n\g\.\k\8\s\.\i\o ]]
+++ '[' -n json ']'
+++ '[' 1 -lt 100 ']'
+++ i=2
+++ shift
+++ [[ ! '' == \i\n\g\r\e\s\s\e\s\.\v\1\.\n\e\t\w\o\r\k\i\n\g\.\k\8\s\.\i\o ]]
+++ '[' -n '' ']'
+++ i=3
+++ N=-1
+++ '[' -1 -le 0 ']'
+++ break
+++ '[' 3 -eq 100 ']'
+++ '[' -n '' ']'
+++ return 255
+++ found_at=255
+++ val_from_args=
+++ print_sub_help -n ''
+++ local val_name=-n
+++ local val_msg=
+++ false
+++ return 1
+++ false
+++ [[ 255 -eq 255 ]]
+++ [[ -z '' ]]
+++ true
+++ return 255
+++ local dummy
+++ '[' -n '' ']'
+++ ns=test-giovanni
+++ [[ -z test-giovanni ]]
+++ '[' -n test-giovanni ']'
+++ assert_ext_ic_id '' test-giovanni silent
+++ _assert_regex_nn '' test-giovanni '^[a-zA-Z0-9_-]*$' '' 'extended identifier' silent
+++ local CMPRES=0
+++ '[' '' = --neg ']'
+++ '[' '' '!=' '' ']'
+++ assert_nn '' test-giovanni silent
+++ local pre
+++ '[' -n '' ']'
+++ '[' -z test-giovanni ']'
+++ return 0
+++ local FATAL=false
+++ '[' silent = fatal ']'
+++ LC_COLLATE=C
+++ [[ test-giovanni =~ ^[a-zA-Z0-9_-]*$ ]]
+++ '[' 0 = 0 ']'
+++ return 0
+++ _set_var NS test-giovanni
+++ '[' -z test-giovanni ']'
+++ read -r -d '' NS
+++ return 0
+++ return 0
+++ local NS=test-giovanni
+++ case "$NS" in
+++ KUBECTL_ONCE_OPTIONS+='--namespace=test-giovanni '
+++ local CTX=ps-dev
+++ '[' -n ps-dev ']'
+++ KUBECTL_ONCE_OPTIONS+='--context=ps-dev '
+++ _trace kubectl kubectl --namespace=test-giovanni --context=ps-dev get ingresses.v1.networking.k8s.io -o json
+++ local trace_id=kubectl
+++ shift
+++ [[    =~  kubectl  ]]
+++ kubectl --namespace=test-giovanni --context=ps-dev get ingresses.v1.networking.k8s.io -o json
++ local 'JSON={
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "networking.k8s.io/v1",
            "kind": "Ingress",
            "metadata": {
                "annotations": {
                    "entando.org/default-sso-in-namespace-server-path": "/auth",
                    "field.cattle.io/publicEndpoints": "[{\"addresses\":[\"51.91.81.169\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"test-giovanni:default-sso-in-namespace-service\",\"ingressName\":\"test-giovanni:default-sso-in-namespace-ingress\",\"hostname\":\"giovanni.k8s-entando.org\",\"path\":\"/auth\",\"allNodes\":false}]",
                    "nginx.ingress.kubernetes.io/force-ssl-redirect": "true"
                },
                "creationTimestamp": "2022-10-14T09:25:01Z",
                "generation": 1,
                "labels": {
                    "EntandoKeycloakServer": "default-sso-in-namespace"
                },
                "name": "default-sso-in-namespace-ingress",
                "namespace": "test-giovanni",
                "ownerReferences": [
                    {
                        "apiVersion": "entando.org/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "EntandoKeycloakServer",
                        "name": "default-sso-in-namespace",
                        "uid": "a0ebb4f7-74f2-467e-91ae-6e9e08845052"
                    }
                ],
                "resourceVersion": "27882497390",
                "uid": "7e54b0fa-11fc-4fac-a6d3-e2e2d1b321a8"
            },
            "spec": {
                "ingressClassName": "nginx",
                "rules": [
                    {
                        "host": "giovanni.k8s-entando.org",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "service": {
                                            "name": "default-sso-in-namespace-service",
                                            "port": {
                                                "number": 8080
                                            }
                                        }
                                    },
                                    "path": "/auth",
                                    "pathType": "Prefix"
                                }
                            ]
                        }
                    }
                ],
                "tls": [
                    {
                        "hosts": [
                            "giovanni.k8s-entando.org"
                        ],
                        "secretName": "entando-tls-secret"
                    }
                ]
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "ip": "51.91.81.169"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "networking.k8s.io/v1",
            "kind": "Ingress",
            "metadata": {
                "annotations": {
                    "entando.org/test-giovanni-appbuilder-path": "/app-builder/",
                    "entando.org/test-giovanni-de-path": "/digital-exchange",
                    "entando.org/test-giovanni-pn-3c07adf0-fac54a9f-enta3934-pn-3c07adf0-fa-path": "/entando-epc-bootstrap-3c07adf0/app-builder-menu-bff",
                    "entando.org/test-giovanni-server-path": "/entando-de-app",
                    "field.cattle.io/publicEndpoints": "[{\"addresses\":[\"51.91.81.169\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"test-giovanni:test-giovanni-ab-service\",\"ingressName\":\"test-giovanni:test-giovanni-ingress\",\"hostname\":\"giovanni.k8s-entando.org\",\"path\":\"/app-builder/\",\"allNodes\":false},{\"addresses\":[\"51.91.81.169\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"test-giovanni:test-giovanni-service\",\"ingressName\":\"test-giovanni:test-giovanni-ingress\",\"hostname\":\"giovanni.k8s-entando.org\",\"path\":\"/entando-de-app\",\"allNodes\":false},{\"addresses\":[\"51.91.81.169\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"test-giovanni:test-giovanni-cm-service\",\"ingressName\":\"test-giovanni:test-giovanni-ingress\",\"hostname\":\"giovanni.k8s-entando.org\",\"path\":\"/digital-exchange\",\"allNodes\":false},{\"addresses\":[\"51.91.81.169\"],\"port\":443,\"protocol\":\"HTTPS\",\"serviceName\":\"test-giovanni:pn-3c07adf0-fac54a9f-entando-app-builder-menu-bff-service\",\"ingressName\":\"test-giovanni:test-giovanni-ingress\",\"hostname\":\"giovanni.k8s-entando.org\",\"path\":\"/entando-epc-bootstrap-3c07adf0/app-builder-menu-bff\",\"allNodes\":false}]",
                    "nginx.ingress.kubernetes.io/force-ssl-redirect": "true"
                },
                "creationTimestamp": "2022-10-14T09:25:52Z",
                "generation": 4,
                "labels": {
                    "EntandoApp": "test-giovanni"
                },
                "name": "test-giovanni-ingress",
                "namespace": "test-giovanni",
                "ownerReferences": [
                    {
                        "apiVersion": "entando.org/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "EntandoApp",
                        "name": "test-giovanni",
                        "uid": "781cc493-130e-403b-b6f9-817fcc40cce8"
                    }
                ],
                "resourceVersion": "27882526595",
                "uid": "d85e6b8d-d6f7-4344-b1d3-728960fba288"
            },
            "spec": {
                "ingressClassName": "nginx",
                "rules": [
                    {
                        "host": "giovanni.k8s-entando.org",
                        "http": {
                            "paths": [
                                {
                                    "backend": {
                                        "service": {
                                            "name": "test-giovanni-ab-service",
                                            "port": {
                                                "number": 8081
                                            }
                                        }
                                    },
                                    "path": "/app-builder/",
                                    "pathType": "Prefix"
                                },
                                {
                                    "backend": {
                                        "service": {
                                            "name": "test-giovanni-service",
                                            "port": {
                                                "number": 8080
                                            }
                                        }
                                    },
                                    "path": "/entando-de-app",
                                    "pathType": "Prefix"
                                },
                                {
                                    "backend": {
                                        "service": {
                                            "name": "test-giovanni-cm-service",
                                            "port": {
                                                "number": 8083
                                            }
                                        }
                                    },
                                    "path": "/digital-exchange",
                                    "pathType": "Prefix"
                                },
                                {
                                    "backend": {
                                        "service": {
                                            "name": "pn-3c07adf0-fac54a9f-entando-app-builder-menu-bff-service",
                                            "port": {
                                                "number": 8081
                                            }
                                        }
                                    },
                                    "path": "/entando-epc-bootstrap-3c07adf0/app-builder-menu-bff",
                                    "pathType": "Prefix"
                                }
                            ]
                        }
                    }
                ],
                "tls": [
                    {
                        "hosts": [
                            "giovanni.k8s-entando.org"
                        ],
                        "secretName": "entando-tls-secret"
                    }
                ]
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "ip": "51.91.81.169"
                        }
                    ]
                }
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}'
+++ _str_quote test-giovanni-ingress
+++ local _sq_simple_=false
+++ '[' test-giovanni-ingress = -s ']'
+++ local tmp=test-giovanni-ingress
+++ tmp=test-giovanni-ingress
+++ tmp=test-giovanni-ingress
+++ tmp=test-giovanni-ingress
+++ false
+++ echo '"test-giovanni-ingress"'
++ local 'JQ=.items[] | select(.metadata.name=="test-giovanni-ingress").spec | .tls // "-", .rules[0].host'
++ stdin_to_arr '
' OUT
++ local i=0
++ local arr
++ IFS='
'
++ read -d '' -r -a arr
+++ _jq '.items[] | select(.metadata.name=="test-giovanni-ingress").spec | .tls // "-", .rules[0].host' -r
+++ _pkg_jq '.items[] | select(.metadata.name=="test-giovanni-ingress").spec | .tls // "-", .rules[0].host' -r
+++ local CMD
+++ _pkg_get_path --strict CMD jq
+++ local STRICT=false
+++ '[' --strict = --strict ']'
+++ STRICT=true
+++ shift
++++ _upper jq_PATH
++++ echo jq_PATH
++++ tr '[:lower:]' '[:upper:]'
+++ local _tmp_PKGPATH=JQ_PATH
+++ _tmp_PKGPATH=/home/giovanni/.entando/bin/jq.1.6
+++ command -v /home/giovanni/.entando/bin/jq.1.6
+++ _set_or_print CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' CMD '!=' --print ']'
+++ _set_var CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' -z /home/giovanni/.entando/bin/jq.1.6 ']'
+++ read -r -d '' CMD
+++ return 0
+++ return 0
+++ /home/giovanni/.entando/bin/jq.1.6 '.items[] | select(.metadata.name=="test-giovanni-ingress").spec | .tls // "-", .rules[0].host' -r
++ for line in "${arr[@]}"
++ _set_var 'OUT[0]' '['
++ '[' -z '[' ']'
++ read -r -d '' 'OUT[0]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[1]' '  {'
++ '[' -z '  {' ']'
++ read -r -d '' 'OUT[1]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[2]' '    "hosts": ['
++ '[' -z '    "hosts": [' ']'
++ read -r -d '' 'OUT[2]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[3]' '      "giovanni.k8s-entando.org"'
++ '[' -z '      "giovanni.k8s-entando.org"' ']'
++ read -r -d '' 'OUT[3]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[4]' '    ],'
++ '[' -z '    ],' ']'
++ read -r -d '' 'OUT[4]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[5]' '    "secretName": "entando-tls-secret"'
++ '[' -z '    "secretName": "entando-tls-secret"' ']'
++ read -r -d '' 'OUT[5]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[6]' '  }'
++ '[' -z '  }' ']'
++ read -r -d '' 'OUT[6]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[7]' ']'
++ '[' -z ']' ']'
++ read -r -d '' 'OUT[7]'
++ return 0
++ (( i++ ))
++ for line in "${arr[@]}"
++ _set_var 'OUT[8]' giovanni.k8s-entando.org
++ '[' -z giovanni.k8s-entando.org ']'
++ read -r -d '' 'OUT[8]'
++ return 0
++ (( i++ ))
++ local 'JQ=.items[].spec.rules[0].http.paths[]|select(.backend.serviceName=='
++ local 'E=).path'
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-server-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-server-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-server-service = -s ']'
++++ local tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ false
++++ echo '"test-giovanni-server-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.serviceName=="test-giovanni-server-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-service = -s ']'
++++ local tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ false
++++ echo '"test-giovanni-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.serviceName=="test-giovanni-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-cm-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-cm-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-cm-service = -s ']'
++++ local tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ false
++++ echo '"test-giovanni-cm-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.serviceName=="test-giovanni-cm-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-ab-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-ab-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-ab-service = -s ']'
++++ local tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ false
++++ echo '"test-giovanni-ab-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.serviceName=="test-giovanni-ab-service").path' -r
++ local 'JQ=.items[].spec.rules[0].http.paths[]|select(.backend.service.name=='
++ local 'E=).path'
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-server-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-server-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-server-service = -s ']'
++++ local tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ tmp=test-giovanni-server-service
++++ false
++++ echo '"test-giovanni-server-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.service.name=="test-giovanni-server-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-service = -s ']'
++++ local tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ tmp=test-giovanni-service
++++ false
++++ echo '"test-giovanni-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.service.name=="test-giovanni-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-cm-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-cm-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-cm-service = -s ']'
++++ local tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ tmp=test-giovanni-cm-service
++++ false
++++ echo '"test-giovanni-cm-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.service.name=="test-giovanni-cm-service").path' -r
++ OUT+=("$(_jq "${JQ}$(_str_quote "$ENTANDO_APPNAME-ab-service")${E}" -r 2>/dev/null <<< "$JSON")")
++++ _str_quote test-giovanni-ab-service
++++ local _sq_simple_=false
++++ '[' test-giovanni-ab-service = -s ']'
++++ local tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ tmp=test-giovanni-ab-service
++++ false
++++ echo '"test-giovanni-ab-service"'
+++ _jq '.items[].spec.rules[0].http.paths[]|select(.backend.service.name=="test-giovanni-ab-service").path' -r
++ '[' '[' = - ']'
++ '[' '[' = '?' ']'
++ _set_var url_scheme https
++ '[' -z https ']'
++ read -r -d '' url_scheme
++ return 0
++ local base_url TMP
++ path-concat base_url '' '{'
++ local terminated=false
++ [[ base_url = \-\t ]]
++ local out=base_url
++ local val1=
++ local 'val2={'
++ [[ -n '' ]]
++ TMP='{'
++ false
++ _set_var base_url '{'
++ '[' -z '{' ']'
++ read -r -d '' base_url
++ return 0
++ _set_var main_ingress ''
++ '[' -z '' ']'
++ read -r -d '' main_ingress
++ return 0
++ _set_var ecr_ingress ''
++ '[' -z '' ']'
++ read -r -d '' ecr_ingress
++ return 0
++ _set_var ignored ''
++ '[' -z '' ']'
++ read -r -d '' ignored
++ return 0
++ '[' '"hosts": [' '!=' '' ']'
++ path-concat -t main_ingress '{' 'hosts": ['
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=main_ingress
++ local 'val1={'
++ local 'val2=hosts": ['
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n hosts": [ ]]
++ [[ hosts": [ =~ ^/.*$ ]]
++ TMP='{/hosts": ['
++ true
++ [[ ! {/hosts": [ =~ ^.*/$ ]]
++ TMP+=/
++ _set_var main_ingress '{/hosts": [/'
++ '[' -z '{/hosts": [/' ']'
++ read -r -d '' main_ingress
++ return 0
++ '[' '"giovanni.k8s-entando.org"' '!=' '' ']'
++ path-concat -t main_ingress '{' 'giovanni.k8s-entando.org"'
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=main_ingress
++ local 'val1={'
++ local 'val2=giovanni.k8s-entando.org"'
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n giovanni.k8s-entando.org" ]]
++ [[ giovanni.k8s-entando.org" =~ ^/.*$ ]]
++ TMP='{/giovanni.k8s-entando.org"'
++ true
++ [[ ! {/giovanni.k8s-entando.org" =~ ^.*/$ ]]
++ TMP+=/
++ _set_var main_ingress '{/giovanni.k8s-entando.org"/'
++ '[' -z '{/giovanni.k8s-entando.org"/' ']'
++ read -r -d '' main_ingress
++ return 0
++ '[' '}' '!=' '' ']'
++ path-concat -t main_ingress '{' ''
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=main_ingress
++ local 'val1={'
++ local val2=
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n '' ]]
++ TMP='{/'
++ true
++ [[ ! {/ =~ ^.*/$ ]]
++ _set_var main_ingress '{/'
++ '[' -z '{/' ']'
++ read -r -d '' main_ingress
++ return 0
++ '[' ']' '!=' '' ']'
++ path-concat -t main_ingress '{' ''
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=main_ingress
++ local 'val1={'
++ local val2=
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n '' ]]
++ TMP='{/'
++ true
++ [[ ! {/ =~ ^.*/$ ]]
++ _set_var main_ingress '{/'
++ '[' -z '{/' ']'
++ read -r -d '' main_ingress
++ return 0
++ '[' '],' '!=' '' ']'
++ path-concat -t ecr_ingress '{' ,
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=ecr_ingress
++ local 'val1={'
++ local val2=,
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n , ]]
++ [[ , =~ ^/.*$ ]]
++ TMP='{/,'
++ true
++ [[ ! {/, =~ ^.*/$ ]]
++ TMP+=/
++ _set_var ecr_ingress '{/,/'
++ '[' -z '{/,/' ']'
++ read -r -d '' ecr_ingress
++ return 0
++ '[' giovanni.k8s-entando.org '!=' '' ']'
++ path-concat -t ecr_ingress '{' iovanni.k8s-entando.org
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=ecr_ingress
++ local 'val1={'
++ local val2=iovanni.k8s-entando.org
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n iovanni.k8s-entando.org ]]
++ [[ iovanni.k8s-entando.org =~ ^/.*$ ]]
++ TMP='{/iovanni.k8s-entando.org'
++ true
++ [[ ! {/iovanni.k8s-entando.org =~ ^.*/$ ]]
++ TMP+=/
++ _set_var ecr_ingress '{/iovanni.k8s-entando.org/'
++ '[' -z '{/iovanni.k8s-entando.org/' ']'
++ read -r -d '' ecr_ingress
++ return 0
++ '[' '"secretName": "entando-tls-secret"' '!=' '' ']'
++ path-concat -t ignored '{' 'secretName": "entando-tls-secret"'
++ local terminated=false
++ [[ -t = \-\t ]]
++ terminated=true
++ shift
++ local out=ignored
++ local 'val1={'
++ local 'val2=secretName": "entando-tls-secret"'
++ [[ -n { ]]
++ [[ { =~ ^.*/$ ]]
++ [[ -n secretName": "entando-tls-secret" ]]
++ [[ secretName": "entando-tls-secret" =~ ^/.*$ ]]
++ TMP='{/secretName": "entando-tls-secret"'
++ true
++ [[ ! {/secretName": "entando-tls-secret" =~ ^.*/$ ]]
++ TMP+=/
++ _set_var ignored '{/secretName": "entando-tls-secret"/'
++ '[' -z '{/secretName": "entando-tls-secret"/' ']'
++ read -r -d '' ignored
++ return 0
++ '[' '' '!=' '' ']'
++ '[' -z '{/' ']'
++ '[' -z '{/iovanni.k8s-entando.org/' ']'
++ '[' -n https ']'
++ main_ingress='https://{/'
++ '[' -z 'https://{/' ']'
++ http-get-url-scheme url_scheme 'https://{/'
++ _set_var url_scheme https
++ '[' -z https ']'
++ read -r -d '' url_scheme
++ return 0
++ save_cfg_value LATEST_URL_SCHEME https
++ IS_MAP=false
++ '[' LATEST_URL_SCHEME = -m ']'
++ local name=LATEST_URL_SCHEME
++ shift
++ local value=https
++ shift
++ local config_file=/home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' -n '' ']'
++ [[ -f /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg ]]
++ false
++ _sed_in_place '/^LATEST_URL_SCHEME=/d' /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
++ '[' /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg = '' ']'
++ false
++ sed -i '/^LATEST_URL_SCHEME=/d' /home/giovanni/.entando/profiles/test-giovanni-ps-dev/w/.cfg
+++ echo https
+++ wc -l
++ '[' 1 -gt 1 ']'
++ false
++ '[' -n https ']'
++ printf 'LATEST_URL_SCHEME=%s\n' https
++ return 0
++ local token
++ keycloak-get-token token https
++ local res_var=token
++ shift
++ local scheme=https
++ local auth_url client_id client_secret realm
++ '[' -z test-giovanni ']'
++ keycloak-query-connection-data auth_url client_id client_secret realm https
++ local tmp
++ local scheme=https
++ local _tmp_client_id
++ local _tmp_client_secret
++ local _tmp_auth_url
++ local _tmp_realm=entando
+++ _kubectl get secret external-sso-secret -o 'jsonpath={.data.clientId}:{.data.clientSecret}:{.data.authUrl}:{.data.realm}'
++ tmp=
++ [[ 1 = \0 ]]
++ local client_secret_name=test-giovanni-de-secret
+++ _kubectl get secret test-giovanni-de-secret -o 'jsonpath={.data.clientId}:{.data.clientSecret}'
++ tmp=dGVzdC1naW92YW5uaS1kZQ==:elo1dldEN2ZyQXI1N3RocWs0UVBLRVNDRnFZSlNwSFE=
+++ _kubectl get ingress -o 'custom-columns=NAME:.metadata.name,HOST:.spec.rules[0].host'
+++ grep -E -- 'kc-ingress|-sso-'
+++ head -n 1
+++ awk '{print $2}'
++ _tmp_auth_url=giovanni.k8s-entando.org
++ '[' -z giovanni.k8s-entando.org ']'
++ _tmp_auth_url+=/auth
++ _tmp_auth_url=https://giovanni.k8s-entando.org/auth
+++ echo dGVzdC1naW92YW5uaS1kZQ==:elo1dldEN2ZyQXI1N3RocWs0UVBLRVNDRnFZSlNwSFE=
+++ cut -d: -f1
++ client_id=dGVzdC1naW92YW5uaS1kZQ==
+++ echo dGVzdC1naW92YW5uaS1kZQ==:elo1dldEN2ZyQXI1N3RocWs0UVBLRVNDRnFZSlNwSFE=
+++ cut -d: -f2
++ client_secret=elo1dldEN2ZyQXI1N3RocWs0UVBLRVNDRnFZSlNwSFE=
++ '[' -z dGVzdC1naW92YW5uaS1kZQ== ']'
+++ _base64_d
+++ perl -e 'use MIME::Base64; print decode_base64(<>);'
++ _tmp_client_id=test-giovanni-de
+++ _base64_d
+++ perl -e 'use MIME::Base64; print decode_base64(<>);'
++ _tmp_client_secret=zZ5vWD7frAr57thqk4QPKESCFqYJSpHQ
++ _set_var auth_url https://giovanni.k8s-entando.org/auth
++ '[' -z https://giovanni.k8s-entando.org/auth ']'
++ read -r -d '' auth_url
++ return 0
++ _set_var client_id test-giovanni-de
++ '[' -z test-giovanni-de ']'
++ read -r -d '' client_id
++ return 0
++ _set_var client_secret zZ5vWD7frAr57thqk4QPKESCFqYJSpHQ
++ '[' -z zZ5vWD7frAr57thqk4QPKESCFqYJSpHQ ']'
++ read -r -d '' client_secret
++ return 0
++ _set_var realm entando
++ '[' -z entando ']'
++ read -r -d '' realm
++ return 0
++ local TOKEN_ENDPOINT
+++ curl --insecure -sL https://giovanni.k8s-entando.org/auth/realms/entando/.well-known/openid-configuration
+++ _jq -r .token_endpoint
+++ _pkg_jq -r .token_endpoint
+++ local CMD
+++ _pkg_get_path --strict CMD jq
+++ local STRICT=false
+++ '[' --strict = --strict ']'
+++ STRICT=true
+++ shift
++++ _upper jq_PATH
++++ echo jq_PATH
++++ tr '[:lower:]' '[:upper:]'
+++ local _tmp_PKGPATH=JQ_PATH
+++ _tmp_PKGPATH=/home/giovanni/.entando/bin/jq.1.6
+++ command -v /home/giovanni/.entando/bin/jq.1.6
+++ _set_or_print CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' CMD '!=' --print ']'
+++ _set_var CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' -z /home/giovanni/.entando/bin/jq.1.6 ']'
+++ read -r -d '' CMD
+++ return 0
+++ return 0
+++ /home/giovanni/.entando/bin/jq.1.6 -r .token_endpoint
++ TOKEN_ENDPOINT=https://giovanni.k8s-entando.org/auth/realms/entando/protocol/openid-connect/token
++ local TOKEN
+++ curl --insecure -sL https://giovanni.k8s-entando.org/auth/realms/entando/protocol/openid-connect/token -H 'Accept: application/json' -H 'Accept-Language: en_US' -u test-giovanni-de:zZ5vWD7frAr57thqk4QPKESCFqYJSpHQ -d grant_type=client_credentials
+++ _jq -r .access_token
+++ _pkg_jq -r .access_token
+++ local CMD
+++ _pkg_get_path --strict CMD jq
+++ local STRICT=false
+++ '[' --strict = --strict ']'
+++ STRICT=true
+++ shift
++++ _upper jq_PATH
++++ echo jq_PATH
++++ tr '[:lower:]' '[:upper:]'
+++ local _tmp_PKGPATH=JQ_PATH
+++ _tmp_PKGPATH=/home/giovanni/.entando/bin/jq.1.6
+++ command -v /home/giovanni/.entando/bin/jq.1.6
+++ _set_or_print CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' CMD '!=' --print ']'
+++ _set_var CMD /home/giovanni/.entando/bin/jq.1.6
+++ '[' -z /home/giovanni/.entando/bin/jq.1.6 ']'
+++ read -r -d '' CMD
+++ return 0
+++ return 0
+++ /home/giovanni/.entando/bin/jq.1.6 -r .access_token
++ TOKEN=eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ
++ [[ -z eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ ]]
++ [[ eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ == \n\u\l\l ]]
++ _set_var token eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ
++ '[' -z eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ ']'
++ read -r -d '' token
++ return 0
++ _set_var INGRESS_URL 'https://{/iovanni.k8s-entando.org/'
++ '[' -z 'https://{/iovanni.k8s-entando.org/' ']'
++ read -r -d '' INGRESS_URL
++ return 0
++ _set_var TOKEN eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ
++ '[' -z eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ ']'
++ read -r -d '' TOKEN
++ return 0
++ local 'DATA={"version":"0.0.1"'
++ '[' -n '' ']'
++ DATA+='}'
++ ecr-bundle-action '' POST install 'https://{/iovanni.k8s-entando.org/' eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ entando-upgrade-687e8bdb '{"version":"0.0.1"}'
++ _log_i 'Installation of bundle "entando-upgrade-687e8bdb" started'
++ __log I '[I]' 0 'Installation of bundle "entando-upgrade-687e8bdb" started'
++ TP=I
++ shift
++ SY='[I]'
++ shift
++ LL=0
++ shift
++ [[ ! 0 =~ ^[0-9]+$ ]]
++ [[ ! EWID =~ I ]]
++ [[ 3 -lt 0 ]]
+++ date '+%Y-%m-%d %H-%M-%S'
++ echo -e '➤ [I] | 2022-10-17 15-54-23 | Installation of bundle "entando-upgrade-687e8bdb" started'
➤ [I] | 2022-10-17 15-54-23 | Installation of bundle "entando-upgrade-687e8bdb" started
++ ecr-watch-installation-result install 'https://{/iovanni.k8s-entando.org/' eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ entando-upgrade-687e8bdb
++ local action=install
++ shift
++ local 'ingress=https://{/iovanni.k8s-entando.org/'
++ shift
++ local token=eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ
++ shift
++ local bundle_id=entando-upgrade-687e8bdb
++ shift
++ local http_res
++ local start_time end_time elapsed
+++ date -u +%s
++ start_time=1666014863
++ echo ''

++ true
+++ ecr-bundle-action % GET install 'https://{/iovanni.k8s-entando.org/' eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ entando-upgrade-687e8bdb
+++ local DEBUG=false
+++ '[' % == --debug ']'
+++ local res_var=%
+++ shift
+++ local verb=GET
+++ shift
+++ local action=install
+++ shift
+++ local 'ingress=https://{/iovanni.k8s-entando.org/'
+++ shift
+++ local token=eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ
+++ shift
+++ local bundle_id=entando-upgrade-687e8bdb
+++ shift
+++ local raw_data=
+++ shift
+++ local url
+++ path-concat url 'https://{/iovanni.k8s-entando.org/' ''
+++ local terminated=false
+++ [[ url = \-\t ]]
+++ local out=url
+++ local 'val1=https://{/iovanni.k8s-entando.org/'
+++ local val2=
+++ [[ -n https://{/iovanni.k8s-entando.org/ ]]
+++ [[ https://{/iovanni.k8s-entando.org/ =~ ^.*/$ ]]
+++ val1_len=34
+++ val1='https://{/iovanni.k8s-entando.org'
+++ [[ -n '' ]]
+++ TMP='https://{/iovanni.k8s-entando.org/'
+++ false
+++ _set_var url 'https://{/iovanni.k8s-entando.org/'
+++ '[' -z 'https://{/iovanni.k8s-entando.org/' ']'
+++ read -r -d '' url
+++ return 0
+++ url+=components
+++ local http_status OUT
+++ '[' -n entando-upgrade-687e8bdb ']'
+++ url+=/entando-upgrade-687e8bdb
+++ '[' -n install ']'
+++ url+=/install
++++ mktemp /tmp/ent-auto-XXXXXXXX
+++ local OUT=/tmp/ent-auto-mJ7sDlNn
+++ false
++++ curl --insecure -o /tmp/ent-auto-mJ7sDlNn -sL -w '%{http_code}\n' -X GET -v 'https://{/iovanni.k8s-entando.org/components/entando-upgrade-687e8bdb/install' -H 'Accept: */*' -H 'Content-Type: application/json' -H 'Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJCcGo3dW5oT2hHSGl2bDgtVU1pcEFEeTc1bGFyZkFmR1RKYmRPODh6Zm5nIn0.eyJleHAiOjE2NjYwMTUxNjMsImlhdCI6MTY2NjAxNDg2MywianRpIjoiZDUyMWE4N2ItMDRkYy00M2FhLThkMGMtNzhjZTI1ZWY5ZTg1IiwiaXNzIjoiaHR0cHM6Ly9naW92YW5uaS5rOHMtZW50YW5kby5vcmcvYXV0aC9yZWFsbXMvZW50YW5kbyIsImF1ZCI6WyJwbi0zYzA3YWRmMC1mYWM1NGE5Zi1lbnRhbmRvLWFwcC1idWlsZGVyLW1lbnUtYmZmLXNlcnZlciIsInRlc3QtZ2lvdmFubmkiLCJhY2NvdW50Il0sInN1YiI6Ijk5YTU4OWVjLTE3MzgtNDUzNS04ZmU1LTJlYzcyOGE3YTkxZCIsInR5cCI6IkJlYXJlciIsImF6cCI6InRlc3QtZ2lvdmFubmktZGUiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbImh0dHBzOi8vZ2lvdmFubmkuazhzLWVudGFuZG8ub3JnIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1lbnRhbmRvIl19LCJyZXNvdXJjZV9hY2Nlc3MiOnsicG4tM2MwN2FkZjAtZmFjNTRhOWYtZW50YW5kby1hcHAtYnVpbGRlci1tZW51LWJmZi1zZXJ2ZXIiOnsicm9sZXMiOlsiZW50YW5kb0FwcCJdfSwidGVzdC1naW92YW5uaSI6eyJyb2xlcyI6WyJzdXBlcnVzZXIiXX0sImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsImNsaWVudElkIjoidGVzdC1naW92YW5uaS1kZSIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwiY2xpZW50SG9zdCI6IjEwLjEyNC4xMjguMjQzIiwicHJlZmVycmVkX3VzZXJuYW1lIjoic2VydmljZS1hY2NvdW50LXRlc3QtZ2lvdmFubmktZGUiLCJjbGllbnRBZGRyZXNzIjoiMTAuMTI0LjEyOC4yNDMifQ.CJDGKylnhIEZz6tC91qzzzFmUGC3hPWzBMjcQ3Gf1FrNYq2zTtMjvzeERkR3OZZKbfNRJZzlb3DYysBNHUuoSEjDYYPym-Zu-YhUtbCw-psgowCJJTFggcRu4yUDiPzVW7gD0fhmBCACK_aA0NvtuI2geF3hnt0Wjk-1Rv0PLvwB9elNnTW7aM8KETvQlYXuKwrCXiNGx1U0geeLi2lq8hsoJOTFuEzCdNTEVQl6boGfE6mxe8CiejfMTdXNnwku1Vrrrdm1EnWym99vNDdemJyqCmf7SedF057uH7J7BW6CzD7v6qRKxKCqc2AMjDsXPG18z2BEGhGgmi8wkQVtEQ' -H 'Origin: https://{/iovanni.k8s-entando.org/'
+++ http_status=
+++ '[' % '!=' % ']'
+++ '[' '' -ge 300 ']'
s/ecr-utils.sh: line 114: [: : integer expression expected
+++ '[' -s /tmp/ent-auto-mJ7sDlNn ']'
+++ '[' % = % ']'
+++ echo %
+++ rm /tmp/ent-auto-mJ7sDlNn
++ http_res=%
++ '[' % '!=' % ']'
++ case "$http_res" in
++ echo -e '\nTerminated "%"'

Terminated "%"
++ return 2
++ return 0
+ true
+ index_of_arg --AND bundle 'ENT wrapper for the node command "bundle"' install
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! bundle == \-\-\A\N\D ]]
+ '[' -n bundle ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! ENT wrapper for the node command "bundle" == \-\-\A\N\D ]]
+ '[' -n 'ENT wrapper for the node command "bundle"' ']'
+ '[' 1 -lt 100 ']'
+ i=2
+ shift
+ [[ ! install == \-\-\A\N\D ]]
+ '[' -n install ']'
+ '[' 2 -lt 100 ']'
+ i=3
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=4
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 4 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 3
+ '[' -z '' ']'
+ break
+ index_of_arg --AND install
+ local N=1
+ local REGEX=0
+ '[' --AND = -- ']'
+ '[' --AND = -p ']'
+ '[' --AND = -P ']'
+ '[' --AND = -n ']'
+ par=--AND
+ shift
+ local i=0
+ true
+ case "$REGEX" in
+ [[ ! install == \-\-\A\N\D ]]
+ '[' -n install ']'
+ '[' 0 -lt 100 ']'
+ i=1
+ shift
+ [[ ! '' == \-\-\A\N\D ]]
+ '[' -n '' ']'
+ i=2
+ N=0
+ '[' 0 -le 0 ']'
+ break
+ '[' 2 -eq 100 ']'
+ '[' -n '' ']'
+ return 255
+ '[' 255 -eq 255 ']'
+ shift 1
+ '[' -z '' ']'
+ break
